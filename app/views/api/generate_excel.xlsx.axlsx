wb = xlsx_package.workbook
order_num = @order.full_order['name']
order_name = "#{@order.full_order['customer']['first_name']} #{@order.full_order['customer']['last_name']}"
order_date = DateTime.iso8601(@order.full_order['created_at'])
order_date = order_date.strftime('%b %-d, %Y at %-l%P')


  heading = wb.styles.add_style alignment: {horizontal: :center, vertical: :center}, b: true, sz: 16, bg_color: "2e323a", fg_color: "FF",font_name: "Arial"
  subheading = wb.styles.add_style alignment: {horizontal: :center, vertical: :center}, b: true, sz: 13, bg_color: "2e323a", fg_color: "FF",font_name: "Arial"
  gold = wb.styles.add_style alignment: {horizontal: :center, vertical: :center}, bg_color: "95804E", fg_color: "FFFFFF",font_name: "Arial", border: {:style => :thin, :color => "333333"}
  center = wb.styles.add_style alignment: {horizontal: :center, vertical: :center, shrink_to_fit: true}, fg_color: "000000",font_name: "Arial"
  wrapped = wb.styles.add_style alignment: {horizontal: :left, vertical: :center, wrap_text: true, shrink_to_fit: true}, fg_color: "000000",font_name: "Arial"

@order.line_items.each do |product|

  if product['title'].downcase.include? 'suit' or product['title'].downcase.include? 'tux'
      category = "Suit"
  elsif product['title'].downcase.include? 'shirt'
      category = "Shirt"
  elsif product['title'].downcase.include? 'jacket'
    category = "Jacket"
  elsif product['title'].downcase.include? 'pants' or product['title'].downcase.include? 'trousers'
    category = "Pants"
  else
    category = "Vest"
  end

  fabric_item=product['properties'].map{|i| i if i['name']=='Fabric ID'}.compact.first
  factory_code = "#{fabric_item['value']} - #{fabric_item['codes'].join(',')}"


wb.add_worksheet(name: product['title'].downcase.gsub(/[^abcdefghijklmnopqrstuvwxyz ]/,'')) do |sheet|
  col_widths = [20,20,20,20,20,20]
  #ROW 1
  sheet.add_row ["Order Details"], :style => heading, :height => 27
  sheet.merge_cells "A1:F1"
  #ROW 2-3
  sheet.add_row ["Order Number", "Order Date", nil, nil,nil,nil], :style => gold, :height => 20
  sheet.add_row [order_num, order_date], :style => center, :height => 20
  #ROW 4-5
  sheet.add_row ["Customer Name", "Height", "Weight", nil, nil,nil], :style => gold, :height => 20
  sheet.add_row [order_name, "#{@customer['measurements']['body_height']} in", "#{@customer['measurements']['body_height']} pounds"], :style => center, :height => 20
  #ROW 6
  sheet.add_row ["Specific Body Information"], :style => subheading, :height => 22
  sheet.merge_cells "A6:F6"
  #ROW 7-9
  sheet.add_row ["Front Shoulder", @customer['posture']['shoulder_position'], "Back Body (I)", @customer['posture']['posture_profile_stance'], " Slope Shoulder (Left) ", @customer['posture']['shoulder_profile_left']], :style => [gold, center, gold, center, gold, center], :height => 20
  sheet.add_row [" Slope Shoulder (Right) ", @customer['posture']['shoulder_profile_right'], "Arm Position", @customer['posture']['arm_position'], "Stoop", @customer['posture']['stoop']], :style => [gold, center, gold, center, gold, center], :height => 20
  sheet.add_row ["Midsection", @customer['posture']['midsection_profile'], "Waistband", @customer['posture']['waistband'], "Seat", @customer['posture']['seat_profile']], :style => [gold, center, gold, center, gold, center], :height => 20
  #ROW 10
  sheet.add_row ["Product Information", nil, nil,nil,nil,nil], :style => subheading, :height => 22
  sheet.merge_cells sheet.rows.last.cells[(0..5)]
  sheet.add_row ["Quantity", nil, "Category", nil, "Code", nil], :style => gold, :height => 20
  sheet.merge_cells sheet.rows.last.cells[(0..1)]
  sheet.merge_cells sheet.rows.last.cells[(2..3)]
  sheet.merge_cells sheet.rows.last.cells[(4..5)]
  sheet.add_row [product['quantity'], nil, category, nil, factory_code, nil], :style => center, :height => 20
  sheet.merge_cells sheet.rows.last.cells[(0..1)]
  sheet.merge_cells sheet.rows.last.cells[(2..3)]
  sheet.merge_cells sheet.rows.last.cells[(4..5)]

      case category.downcase
      when 'jacket'
          render partial: 'jackets', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
      when 'pants'
          render partial: 'pants', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
      when 'suit'
          render partial: 'jackets', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
          render partial: 'pants', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
      when 'shirt'
          render partial: 'shirts', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
      when 'vest'
          render partial: 'vests', locals: {sheet: sheet, gold: gold, subheading: subheading, center: center, customer: @customer}
      end

      sheet.add_row ["Process Information", nil, nil,nil,nil,nil], :style => subheading, :height => 22
      sheet.merge_cells sheet.rows.last.cells[(0..5)]
      product['properties'].each do |prop|
        unless prop['name'].include? "Fabric ID" or prop['name'].include? "image" or prop['name'].include? "line_id" or prop['name'].include? "Final Price"
            codes = ""
            if prop["codes"] != nil
              prop["codes"].each do |c|
                codes = codes + ", " if codes != ""
                codes = codes + c.to_s
              end
            end
            sheet.add_row [prop['name'], prop['value'], nil, nil,nil, codes], :style => [gold, center, center, center,center,wrapped], :height => 18
            sheet.merge_cells sheet.rows.last.cells[(1..4)]
        end
      end
      sheet.column_widths(*col_widths)
  end

end